#include "heuristic.h"
#include "pseudorandomplayout.h"
#include <random>
#include "board.h"
#include "log.h"

/****
 *
 *  If the board is one step from winning then make this move. 
 *  If the board is one step from loosing block
 *  otherwise make a different guess
 *
 * */
zet PseudoRandomPlayout::select_random_move(board& b){

	std::vector<match_t> matches = winNextMove.getMatches(b,b.active_player());
	//if can win
	if(matches.size()>0){
		return zet(matches[0].second,0,b.active_player());
	}

	//std::vector<match_t> blocks = winNextMove.getMatches(b,(b.active_player()==BLACK)?WHITE:BLACK);
	//if can block
//	if(blocks.size()>0){
//		return zet(blocks[0].second,0,b.active_player());
//	}

	vector<uint64> moves = enumerate_moves_uint64(b);
	return zet(moves[rng() % moves.size()],0,b.active_player());
}

PseudoRandomPlayout::PseudoRandomPlayout(){
	winNextMove.add(binstringtouint64("011100000000000000000000000000000000"),binstringtouint64("100000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("101100000000000000000000000000000000"),binstringtouint64("010000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("110100000000000000000000000000000000"),binstringtouint64("001000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("111000000000000000000000000000000000"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("001110000000000000000000000000000000"),binstringtouint64("010000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("010110000000000000000000000000000000"),binstringtouint64("001000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("011010000000000000000000000000000000"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("011100000000000000000000000000000000"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000111000000000000000000000000000000"),binstringtouint64("001000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("001011000000000000000000000000000000"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("001101000000000000000000000000000000"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("001110000000000000000000000000000000"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000011100000000000000000000000000000"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000101100000000000000000000000000000"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000110100000000000000000000000000000"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000111000000000000000000000000000000"),binstringtouint64("000000100000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001110000000000000000000000000000"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000010110000000000000000000000000000"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000011010000000000000000000000000000"),binstringtouint64("000000100000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000011100000000000000000000000000000"),binstringtouint64("000000010000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000111000000000000000000000000000"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001011000000000000000000000000000"),binstringtouint64("000000100000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001101000000000000000000000000000"),binstringtouint64("000000010000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001110000000000000000000000000000"),binstringtouint64("000000001000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000011100000000000000000000000"),binstringtouint64("000000000100000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000101100000000000000000000000"),binstringtouint64("000000000010000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000110100000000000000000000000"),binstringtouint64("000000000001000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000111000000000000000000000000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000001110000000000000000000000"),binstringtouint64("000000000010000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000010110000000000000000000000"),binstringtouint64("000000000001000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000011010000000000000000000000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000011100000000000000000000000"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000111000000000000000000000"),binstringtouint64("000000000001000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000001011000000000000000000000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000001101000000000000000000000"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000001110000000000000000000000"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000011100000000000000000000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000101100000000000000000000"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000110100000000000000000000"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000111000000000000000000000"),binstringtouint64("000000000000000100000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000001110000000000000000000"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000010110000000000000000000"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000011010000000000000000000"),binstringtouint64("000000000000000100000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000011100000000000000000000"),binstringtouint64("000000000000000010000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000111000000000000000000"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000001011000000000000000000"),binstringtouint64("000000000000000100000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000001101000000000000000000"),binstringtouint64("000000000000000010000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000001110000000000000000000"),binstringtouint64("000000000000000001000000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000011100000000000000"),binstringtouint64("000000000000000000100000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000101100000000000000"),binstringtouint64("000000000000000000010000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000110100000000000000"),binstringtouint64("000000000000000000001000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000111000000000000000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000001110000000000000"),binstringtouint64("000000000000000000010000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000010110000000000000"),binstringtouint64("000000000000000000001000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000011010000000000000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000011100000000000000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000111000000000000"),binstringtouint64("000000000000000000001000000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000001011000000000000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000001101000000000000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000001110000000000000"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000011100000000000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000101100000000000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000110100000000000"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000111000000000000"),binstringtouint64("000000000000000000000000100000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000001110000000000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000010110000000000"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000011010000000000"),binstringtouint64("000000000000000000000000100000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000011100000000000"),binstringtouint64("000000000000000000000000010000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000111000000000"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000001011000000000"),binstringtouint64("000000000000000000000000100000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000001101000000000"),binstringtouint64("000000000000000000000000010000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000001110000000000"),binstringtouint64("000000000000000000000000001000000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000011100000"),binstringtouint64("000000000000000000000000000100000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000101100000"),binstringtouint64("000000000000000000000000000010000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000110100000"),binstringtouint64("000000000000000000000000000001000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000111000000"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000001110000"),binstringtouint64("000000000000000000000000000010000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000010110000"),binstringtouint64("000000000000000000000000000001000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000011010000"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000011100000"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000111000"),binstringtouint64("000000000000000000000000000001000000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000001011000"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000001101000"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000001110000"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000011100"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000101100"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000110100"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000111000"),binstringtouint64("000000000000000000000000000000000100"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000001110"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000010110"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000011010"),binstringtouint64("000000000000000000000000000000000100"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000011100"),binstringtouint64("000000000000000000000000000000000010"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000000111"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000001011"),binstringtouint64("000000000000000000000000000000000100"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000001101"),binstringtouint64("000000000000000000000000000000000010"));
	winNextMove.add(binstringtouint64("000000000000000000000000000000001110"),binstringtouint64("000000000000000000000000000000000001"));
	winNextMove.add(binstringtouint64("000000000100000000100000000100000000"),binstringtouint64("100000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("100000000000000000100000000100000000"),binstringtouint64("000000000100000000000000000000000000"));
	winNextMove.add(binstringtouint64("100000000100000000000000000100000000"),binstringtouint64("000000000000000000100000000000000000"));
	winNextMove.add(binstringtouint64("100000000100000000100000000000000000"),binstringtouint64("000000000000000000000000000100000000"));
	winNextMove.add(binstringtouint64("000000000010000000010000000010000000"),binstringtouint64("010000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("010000000000000000010000000010000000"),binstringtouint64("000000000010000000000000000000000000"));
	winNextMove.add(binstringtouint64("010000000010000000000000000010000000"),binstringtouint64("000000000000000000010000000000000000"));
	winNextMove.add(binstringtouint64("010000000010000000010000000000000000"),binstringtouint64("000000000000000000000000000010000000"));
	winNextMove.add(binstringtouint64("000000000001000000001000000001000000"),binstringtouint64("001000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("001000000000000000001000000001000000"),binstringtouint64("000000000001000000000000000000000000"));
	winNextMove.add(binstringtouint64("001000000001000000000000000001000000"),binstringtouint64("000000000000000000001000000000000000"));
	winNextMove.add(binstringtouint64("001000000001000000001000000000000000"),binstringtouint64("000000000000000000000000000001000000"));
	winNextMove.add(binstringtouint64("000000000000100000000100000000100000"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000100000000000000000100000000100000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("000100000000100000000000000000100000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("000100000000100000000100000000000000"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000000010000000010000000010000"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000010000000000000000010000000010000"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000010000000010000000000000000010000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("000010000000010000000010000000000000"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000001000000001000000001000"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001000000000000000001000000001000"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000001000000001000000000000000001000"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000001000000001000000001000000000000"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000000100000000100000000100"),binstringtouint64("000000100000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000100000000000000000100000000100"),binstringtouint64("000000000000000100000000000000000000"));
	winNextMove.add(binstringtouint64("000000100000000100000000000000000100"),binstringtouint64("000000000000000000000000100000000000"));
	winNextMove.add(binstringtouint64("000000100000000100000000100000000000"),binstringtouint64("000000000000000000000000000000000100"));
	winNextMove.add(binstringtouint64("000000000000000010000000010000000010"),binstringtouint64("000000010000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000010000000000000000010000000010"),binstringtouint64("000000000000000010000000000000000000"));
	winNextMove.add(binstringtouint64("000000010000000010000000000000000010"),binstringtouint64("000000000000000000000000010000000000"));
	winNextMove.add(binstringtouint64("000000010000000010000000010000000000"),binstringtouint64("000000000000000000000000000000000010"));
	winNextMove.add(binstringtouint64("000000000000000001000000001000000001"),binstringtouint64("000000001000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000001000000000000000001000000001"),binstringtouint64("000000000000000001000000000000000000"));
	winNextMove.add(binstringtouint64("000000001000000001000000000000000001"),binstringtouint64("000000000000000000000000001000000000"));
	winNextMove.add(binstringtouint64("000000001000000001000000001000000000"),binstringtouint64("000000000000000000000000000000000001"));
	winNextMove.add(binstringtouint64("000000000010000000001000000000100000"),binstringtouint64("100000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("100000000000000000001000000000100000"),binstringtouint64("000000000010000000000000000000000000"));
	winNextMove.add(binstringtouint64("100000000010000000000000000000100000"),binstringtouint64("000000000000000000001000000000000000"));
	winNextMove.add(binstringtouint64("100000000010000000001000000000000000"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000001000000000100000000010000"),binstringtouint64("010000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("010000000000000000000100000000010000"),binstringtouint64("000000000001000000000000000000000000"));
	winNextMove.add(binstringtouint64("010000000001000000000000000000010000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("010000000001000000000100000000000000"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000100000000010000000001000"),binstringtouint64("001000000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("001000000000000000000010000000001000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("001000000000100000000000000000001000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("001000000000100000000010000000000000"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000010000000001000000000100"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000100000000000000000001000000000100"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000100000000010000000000000000000100"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000100000000010000000001000000000000"),binstringtouint64("000000000000000000000000000000000100"));
	winNextMove.add(binstringtouint64("000000000000001000000000100000000010"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000010000000000000000000100000000010"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000010000000001000000000000000000010"),binstringtouint64("000000000000000000000000100000000000"));
	winNextMove.add(binstringtouint64("000010000000001000000000100000000000"),binstringtouint64("000000000000000000000000000000000010"));
	winNextMove.add(binstringtouint64("000000000000000100000000010000000001"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001000000000000000000010000000001"),binstringtouint64("000000000000000100000000000000000000"));
	winNextMove.add(binstringtouint64("000001000000000100000000000000000001"),binstringtouint64("000000000000000000000000010000000000"));
	winNextMove.add(binstringtouint64("000001000000000100000000010000000000"),binstringtouint64("000000000000000000000000000000000001"));
	winNextMove.add(binstringtouint64("000000000000000010000000100000001000"),binstringtouint64("000000001000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000001000000000000000100000001000"),binstringtouint64("000000000000000010000000000000000000"));
	winNextMove.add(binstringtouint64("000000001000000010000000000000001000"),binstringtouint64("000000000000000000000000100000000000"));
	winNextMove.add(binstringtouint64("000000001000000010000000100000000000"),binstringtouint64("000000000000000000000000000000001000"));
	winNextMove.add(binstringtouint64("000000000000000100000001000000010000"),binstringtouint64("000000010000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000010000000000000001000000010000"),binstringtouint64("000000000000000100000000000000000000"));
	winNextMove.add(binstringtouint64("000000010000000100000000000000010000"),binstringtouint64("000000000000000000000001000000000000"));
	winNextMove.add(binstringtouint64("000000010000000100000001000000000000"),binstringtouint64("000000000000000000000000000000010000"));
	winNextMove.add(binstringtouint64("000000000000001000000010000000100000"),binstringtouint64("000000100000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000000100000000000000010000000100000"),binstringtouint64("000000000000001000000000000000000000"));
	winNextMove.add(binstringtouint64("000000100000001000000000000000100000"),binstringtouint64("000000000000000000000010000000000000"));
	winNextMove.add(binstringtouint64("000000100000001000000010000000000000"),binstringtouint64("000000000000000000000000000000100000"));
	winNextMove.add(binstringtouint64("000000000000010000000100000001000000"),binstringtouint64("000001000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000001000000000000000100000001000000"),binstringtouint64("000000000000010000000000000000000000"));
	winNextMove.add(binstringtouint64("000001000000010000000000000001000000"),binstringtouint64("000000000000000000000100000000000000"));
	winNextMove.add(binstringtouint64("000001000000010000000100000000000000"),binstringtouint64("000000000000000000000000000001000000"));
	winNextMove.add(binstringtouint64("000000000000100000001000000010000000"),binstringtouint64("000010000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000010000000000000001000000010000000"),binstringtouint64("000000000000100000000000000000000000"));
	winNextMove.add(binstringtouint64("000010000000100000000000000010000000"),binstringtouint64("000000000000000000001000000000000000"));
	winNextMove.add(binstringtouint64("000010000000100000001000000000000000"),binstringtouint64("000000000000000000000000000010000000"));
	winNextMove.add(binstringtouint64("000000000001000000010000000100000000"),binstringtouint64("000100000000000000000000000000000000"));
	winNextMove.add(binstringtouint64("000100000000000000010000000100000000"),binstringtouint64("000000000001000000000000000000000000"));
	winNextMove.add(binstringtouint64("000100000001000000000000000100000000"),binstringtouint64("000000000000000000010000000000000000"));
	winNextMove.add(binstringtouint64("000100000001000000010000000000000000"),binstringtouint64("000000000000000000000000000100000000"));
}
/*
int main(int argc, const char *argv[])
{
	PseudoRandomPlayout p;
	board bt;
	for (int i=0;i<10000;i++){
		bt.pieces[WHITE]=0;
		bt.pieces[BLACK]=0;
		while(!bt.is_ended()){
			zet z= p.select_random_move(bt);
			bt=bt+z;
			//std::cout<<bt;
		}
		if(bt.white_has_won()){
			std::cout<<"0"<<std::endl;
		} else if(bt.black_has_won()){
			std::cout<<"1"<<std::endl;
		} else{
			std::cout<<"0.5"<<std::endl;
		}

	};

	RandomPlayout p1;
	for (int i=0;i<10000;i++){
		bt.pieces[WHITE]=0;
		bt.pieces[BLACK]=0;
		while(!bt.is_ended()){
			zet z= p1.select_random_move(bt);
			bt=bt+z;
			//std::cout<<bt;
		}
		if(bt.white_has_won()){
			std::cout<<"r0"<<std::endl;
		} else if(bt.black_has_won()){
			std::cout<<"r1"<<std::endl;
		} else{
			std::cout<<"r0.5"<<std::endl;
		}

	};

	return 0;
}
*/
